# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-05-21 18:15
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import djangoplicity.archives.base
import djangoplicity.archives.fields
import djangoplicity.metadata.archives.fields
import djangoplicity.products2.base.consts
import django.db.models.deletion
import djangoplicity.translation.fields



class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArchiveCategory',
            fields=[
                ('name', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=50, verbose_name=b'Archive Item Category')),
            ],
            options={
                'verbose_name': 'Archive Category',
                'verbose_name_plural': 'Archive Categories',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('itunes_link', models.URLField(blank=True, help_text=b'iTunes Store Link')),
                ('marketplace_link', models.URLField(blank=True, help_text=b'Google Play store Link')),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', 'id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='MiniSite',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='PaperModel',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='PlanetariumShow',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='VirtualTour',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='KidsDrawing',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(blank=True, max_length=255)),
                ('age', models.PositiveSmallIntegerField(blank=True)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'Kids Drawing',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='PressKit',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('file_duration', djangoplicity.metadata.archives.fields.AVMFileDuration(blank=True, help_text='The duration of the file in the format hh:mm:ss:frames.', max_length=13, null=True, verbose_name='File Duration')),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name_plural': 'music',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Logo',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='OnlineArtAuthor',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(blank=True, max_length=255)),
                ('email', models.CharField(blank=True, max_length=255)),
                ('link', models.CharField(blank=True, max_length=255)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'Space Artist',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='OnlineArt',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products2.OnlineArtAuthor')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'Space Art',
                'verbose_name_plural': 'Space Art',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='ElectronicCard',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('resolution', models.IntegerField(blank=True, default=0, help_text='Resolution (DPI)')),
                ('x_size', models.IntegerField(blank=True, help_text='X size (px)', null=True)),
                ('y_size', models.IntegerField(blank=True, help_text='Y size (px)', null=True)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'Electronic Card',
                'verbose_name_plural': 'Electronic Cards',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='ExhibitionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
            ],
        ),
        migrations.CreateModel(
            name='Exhibition',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('group_order', models.PositiveIntegerField(blank=True, null=True)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products2.ExhibitionGroup')),
            ],
            options={
                'ordering': ['title', '-group__priority', 'group_order', '-priority'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='FITSImage',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'FITS Liberator Image',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='UserVideo',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('duration', djangoplicity.metadata.archives.fields.AVMFileDuration(blank=True, help_text='The duration of the file in the format hh:mm:ss:frames.', max_length=13, null=True, verbose_name='File Duration')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('email', models.CharField(blank=True, max_length=255)),
                ('link', models.CharField(blank=True, max_length=255)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'User Video',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Presentation',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='AnnualReport',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='EducationalMaterial',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'Medium',
                'verbose_name_plural': 'Media',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('isbn', models.CharField(blank=True, max_length=255, verbose_name='ISBN')),
                ('doi', models.CharField(blank=True, max_length=255, verbose_name='DOI')),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Brochure',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Handout',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Flyer',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Stationery',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name_plural': 'Stationery',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Merchandise',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name_plural': 'Merchandise',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Apparel',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name_plural': 'Apparel',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='STECFNewsletter',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'STECF Newsletter',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='CapJournal',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'CAPjournal',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Messenger',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'Messenger',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='ScienceInSchool',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'Science In School',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Bulletin',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'Bulletin',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='PostCard',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'Postcard',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='MountedImage',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
                ('image', djangoplicity.translation.fields.TranslationForeignKey(on_delete=django.db.models.deletion.CASCADE, to='media.Image')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='PrintedPoster',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('resolution', models.IntegerField(blank=True, default=0, help_text='Resolution (DPI)')),
                ('x_size', models.IntegerField(blank=True, help_text='X size (px)', null=True)),
                ('y_size', models.IntegerField(blank=True, help_text='Y size (px)', null=True)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='ConferencePoster',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('resolution', models.IntegerField(blank=True, default=0, help_text='Resolution (DPI)')),
                ('x_size', models.IntegerField(blank=True, help_text='X size (px)', null=True)),
                ('y_size', models.IntegerField(blank=True, help_text='Y size (px)', null=True)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='ElectronicPoster',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('resolution', models.IntegerField(blank=True, default=0, help_text='Resolution (DPI)')),
                ('x_size', models.IntegerField(blank=True, help_text='X size (px)', null=True)),
                ('y_size', models.IntegerField(blank=True, help_text='Y size (px)', null=True)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Sticker',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='TechnicalDocument',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Number of pages', null=True)),
                ('cover', models.CharField(blank=True, choices=[(b'Hardcover', b'Hardcover'), (b'Softcover', b'Softcover')], help_text='Type of cover', max_length=9)),
                ('language', models.CharField(blank=True, choices=[(b'ab', b'Abkhaz'), (b'aa', b'Afar'), (b'af', b'Afrikaans'), (b'ak', b'Akan'), (b'sq', b'Albanian'), (b'am', b'Amharic'), (b'ar', b'Arabic'), (b'an', b'Aragonese'), (b'hy', b'Armenian'), (b'as', b'Assamese'), (b'av', b'Avaric'), (b'ae', b'Avestan'), (b'ay', b'Aymara'), (b'az', b'Azerbaijani'), (b'bm', b'Bambara'), (b'ba', b'Bashkir'), (b'eu', b'Basque'), (b'be', b'Belarusian'), (b'bn', b'Bengali'), (b'bh', b'Bihari'), (b'bi', b'Bislama'), (b'bs', b'Bosnian'), (b'br', b'Breton'), (b'bg', b'Bulgarian'), (b'my', b'Burmese'), (b'ca', b'Catalan'), (b'ch', b'Chamorro'), (b'ce', b'Chechen'), (b'ny', b'Chichewa'), (b'zh', b'Chinese'), (b'cv', b'Chuvash'), (b'kw', b'Cornish'), (b'co', b'Corsican'), (b'cr', b'Cree'), (b'hr', b'Croatian'), (b'cs', b'Czech'), (b'da', b'Danish'), (b'dv', b'Divehi'), (b'nl', b'Dutch'), (b'dz', b'Dzongkha'), (b'en', b'English'), (b'et', b'Estonian'), (b'ee', b'Ewe'), (b'fo', b'Faroese'), (b'fj', b'Fijian'), (b'fi', b'Finnish'), (b'fr', b'French'), (b'ff', b'Fula'), (b'gl', b'Galician'), (b'ka', b'Georgian'), (b'de', b'German'), (b'el', b'Greek'), (b'kl', b'Greenlandic'), (b'gn', b'Guarani'), (b'gu', b'Gujarati'), (b'ht', b'Haitian'), (b'ha', b'Hausa'), (b'he', b'Hebrew'), (b'hz', b'Herero'), (b'hi', b'Hindi'), (b'ho', b'Hiri Motu'), (b'hu', b'Hungarian'), (b'is', b'Icelandic'), (b'ig', b'Igbo'), (b'id', b'Indonesian'), (b'iu', b'Inuktitut'), (b'ik', b'Inupiaq'), (b'ga', b'Irish'), (b'it', b'Italian'), (b'ja', b'Japanese'), (b'jv', b'Javanese'), (b'kn', b'Kannada'), (b'kr', b'Kanuri'), (b'ks', b'Kashmiri'), (b'kk', b'Kazakh'), (b'km', b'Khmer'), (b'ki', b'Kikuyu'), (b'rw', b'Kinyarwanda'), (b'ky', b'Kirghiz'), (b'rn', b'Kirundi'), (b'kv', b'Komi'), (b'kg', b'Kongo'), (b'ko', b'Korean'), (b'ku', b'Kurdish'), (b'kj', b'Kwanyama'), (b'lo', b'Lao'), (b'la', b'Latin'), (b'lv', b'Latvian'), (b'li', b'Limburgish'), (b'ln', b'Lingala'), (b'lt', b'Lithuanian'), (b'lu', b'Luba-Katanga'), (b'lg', b'Luganda'), (b'lb', b'Luxembourgish'), (b'mk', b'Macedonian'), (b'mg', b'Malagasy'), (b'ms', b'Malay'), (b'ml', b'Malayalam'), (b'mt', b'Maltese'), (b'gv', b'Manx'), (b'mi', b'Maori'), (b'mr', b'Marathi'), (b'mh', b'Marshallese'), (b'mn', b'Mongolian'), (b'na', b'Nauru'), (b'nv', b'Navajo'), (b'ng', b'Ndonga'), (b'ne', b'Nepali'), (b'nd', b'North Ndebele'), (b'se', b'Northern Sami'), (b'no', b'Norwegian'), (b'nb', b'Norwegian Bokm\xef\xbf\xbdl'), (b'nn', b'Norwegian Nynorsk'), (b'ii', b'Nuosu'), (b'oc', b'Occitan'), (b'oj', b'Ojibwe'), (b'or', b'Oriya'), (b'om', b'Oromo'), (b'os', b'Ossetian'), (b'pi', b'Pali'), (b'pa', b'Panjabi'), (b'ps', b'Pashto'), (b'fa', b'Persian'), (b'pl', b'Polish'), (b'pt', b'Portuguese'), (b'qu', b'Quechua'), (b'ro', b'Romanian'), (b'rm', b'Romansh'), (b'ru', b'Russian'), (b'sm', b'Samoan'), (b'sg', b'Sango'), (b'sa', b'Sanskrit'), (b'sc', b'Sardinian'), (b'gd', b'Scottish Gaelic'), (b'sr', b'Serbian'), (b'sr-latn', b'Serbian Latin'), (b'sn', b'Shona'), (b'sd', b'Sindhi'), (b'si', b'Sinhala'), (b'sk', b'Slovak'), (b'sl', b'Slovene'), (b'so', b'Somali'), (b'nr', b'South Ndebele'), (b'st', b'Southern Sotho'), (b'es', b'Spanish'), (b'su', b'Sundanese'), (b'sw', b'Swahili'), (b'ss', b'Swati'), (b'sv', b'Swedish'), (b'tl', b'Tagalog'), (b'ty', b'Tahitian'), (b'tg', b'Tajik'), (b'ta', b'Tamil'), (b'tt', b'Tatar'), (b'te', b'Telugu'), (b'th', b'Thai'), (b'bo', b'Tibetan Standard'), (b'ti', b'Tigrinya'), (b'to', b'Tonga'), (b'ts', b'Tsonga'), (b'tn', b'Tswana'), (b'tr', b'Turkish'), (b'tk', b'Turkmen'), (b'tw', b'Twi'), (b'ug', b'Uighur'), (b'uk', b'Ukrainian'), (b'ur', b'Urdu'), (b'uz', b'Uzbek'), (b've', b'Venda'), (b'vi', b'Vietnamese'), (b'wa', b'Walloon'), (b'cy', b'Welsh'), (b'fy', b'Western Frisian'), (b'wo', b'Wolof'), (b'xh', b'Xhosa'), (b'yi', b'Yiddish'), (b'yo', b'Yoruba'), (b'za', b'Zhuang'), (b'zu', b'Zulu')], max_length=2)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('width', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('height', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('depth', models.CharField(blank=True, help_text='(cm)', max_length=10)),
                ('weight', models.CharField(blank=True, default=0, help_text='(g)', max_length=10)),
                ('year', models.CharField(max_length=4)),
                ('month', djangoplicity.archives.fields.ChoiceField(blank=True, choices=((0, '(Main Calendar Entry)'), (1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')), default=0, help_text='Choice.')),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-year', 'month'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='SupernovaActivity',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'verbose_name': 'ESO supernova activity',
                'verbose_name_plural': 'ESO supernova activities',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='IMAXFilm',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='EPublication',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'ePublication',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('max_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('job', models.CharField(blank=True, help_text=b'DEFAULT_CONFERENCE_JOB_NO_HELP_TEXT_FUNC', max_length=4)),
                ('jsp', models.IntegerField(blank=True, help_text=b'DEFAULT_CONFERENCE_JSP_NO_FUNC', null=True, verbose_name='JSP')),
                ('account_no', models.CharField(blank=True, help_text=b'DEFAULT_CONFERENCE_ACCOUNT_NO_FUNC', max_length=10)),
            ],
            options={
                'verbose_name': 'conference type',
                'verbose_name_plural': 'conference type',
            },
        ),
        migrations.CreateModel(
            name='ConferenceItem',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products2.Conference')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': 'Conference',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Model3d',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('priority', djangoplicity.archives.fields.PriorityField(db_index=True, default=0, help_text='Priority of product (100 highest, 0 lowest) - high priority products are ranked higher in search results than low priority products.')),
                ('credit', djangoplicity.metadata.archives.fields.AVMCreditField(blank=True, default=djangoplicity.products2.base.consts.DEFAULT_CREDIT_FUNC, help_text='The minimum information that the Publisher would like to see mentioned when the resource is used.', null=False)),
                ('sketchfab_id', models.CharField(blank=True, help_text='Model ID if uploaded on sketchfab', max_length=255)),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('embargo_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('archive_category', models.ManyToManyField(blank=True, to='products2.ArchiveCategory')),
            ],
            options={
                'ordering': ['-priority', '-id'],
                'abstract': False,
                'verbose_name': '3D Model',
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', djangoplicity.archives.fields.IdField(help_text='Ids are only allowed to contain letters, numbers, underscores or hyphens. They are used in URLs for the archive item.', primary_key=True, serialize=False)),
                ('title', djangoplicity.archives.fields.TitleField(db_index=True, help_text='Title is shown in browser window. Use a good informative title, since search engines normally display the title on their result pages.', max_length=200)),
                ('description', djangoplicity.archives.fields.DescriptionField(blank=True, help_text='')),
                ('release_date', djangoplicity.archives.fields.ReleaseDateTimeField(blank=True, db_index=True, null=True)),
                ('published', models.BooleanField(db_index=True, default=False, verbose_name='Published')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('release_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('embargo_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('checksums', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='media.Image')),
            ],
            options={
                'ordering': ['-release_date'],
            },
            bases=(djangoplicity.archives.base.ArchiveModel, models.Model),
        ),
    ]
